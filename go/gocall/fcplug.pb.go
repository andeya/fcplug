// Code generated by protoc-gen-go. DO NOT EDIT.
// source: fcplug.proto

package gocall

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	anypb "google.golang.org/protobuf/types/known/anypb"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type FFIResult struct {
	Code                 int32      `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg                  string     `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data                 *anypb.Any `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *FFIResult) Reset()         { *m = FFIResult{} }
func (m *FFIResult) String() string { return proto.CompactTextString(m) }
func (*FFIResult) ProtoMessage()    {}
func (*FFIResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_9e0d9705173cc2f0, []int{0}
}

func (m *FFIResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FFIResult.Unmarshal(m, b)
}
func (m *FFIResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FFIResult.Marshal(b, m, deterministic)
}
func (m *FFIResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FFIResult.Merge(m, src)
}
func (m *FFIResult) XXX_Size() int {
	return xxx_messageInfo_FFIResult.Size(m)
}
func (m *FFIResult) XXX_DiscardUnknown() {
	xxx_messageInfo_FFIResult.DiscardUnknown(m)
}

var xxx_messageInfo_FFIResult proto.InternalMessageInfo

func (m *FFIResult) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *FFIResult) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *FFIResult) GetData() *anypb.Any {
	if m != nil {
		return m.Data
	}
	return nil
}

// Empty empty data
type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_9e0d9705173cc2f0, []int{1}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

func init() {
	proto.RegisterType((*FFIResult)(nil), "fcplug.FFIResult")
	proto.RegisterType((*Empty)(nil), "fcplug.Empty")
}

func init() { proto.RegisterFile("fcplug.proto", fileDescriptor_9e0d9705173cc2f0) }

var fileDescriptor_9e0d9705173cc2f0 = []byte{
	// 160 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x49, 0x4b, 0x2e, 0xc8,
	0x29, 0x4d, 0xd7, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x83, 0xf0, 0xa4, 0x24, 0xd3, 0xf3,
	0xf3, 0xd3, 0x73, 0x52, 0xf5, 0xc1, 0xa2, 0x49, 0xa5, 0x69, 0xfa, 0x89, 0x79, 0x95, 0x10, 0x25,
	0x4a, 0xd1, 0x5c, 0x9c, 0x6e, 0x6e, 0x9e, 0x41, 0xa9, 0xc5, 0xa5, 0x39, 0x25, 0x42, 0x42, 0x5c,
	0x2c, 0xc9, 0xf9, 0x29, 0xa9, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0xac, 0x41, 0x60, 0xb6, 0x90, 0x00,
	0x17, 0x73, 0x6e, 0x71, 0xba, 0x04, 0x93, 0x02, 0xa3, 0x06, 0x67, 0x10, 0x88, 0x29, 0xa4, 0xc1,
	0xc5, 0x92, 0x92, 0x58, 0x92, 0x28, 0xc1, 0xac, 0xc0, 0xa8, 0xc1, 0x6d, 0x24, 0xa2, 0x07, 0x31,
	0x5c, 0x0f, 0x66, 0xb8, 0x9e, 0x63, 0x5e, 0x65, 0x10, 0x58, 0x85, 0x12, 0x3b, 0x17, 0xab, 0x6b,
	0x6e, 0x41, 0x49, 0xa5, 0x13, 0x47, 0x14, 0x5b, 0x7a, 0x7e, 0x72, 0x62, 0x4e, 0x4e, 0x12, 0x1b,
	0x58, 0x99, 0x31, 0x20, 0x00, 0x00, 0xff, 0xff, 0xe5, 0x27, 0xbd, 0x8e, 0xa9, 0x00, 0x00, 0x00,
}
