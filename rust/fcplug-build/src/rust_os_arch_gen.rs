#![allow(non_camel_case_types)]

#[derive(strum::AsRefStr, strum::EnumString)]
pub enum RustOS {
    #[strum(serialize = "3ds")]_3ds,
    aix,
    android,
    androideabi,
    cuda,
    darwin,
    dragonfly,
    eabi,
    eabihf,
    elf,
    emscripten,
    espidf,
    freebsd,
    fuchsia,
    gnu,
    haiku,
    hermit,
    illumos,
    ios,
    l4re,
    linux,
    netbsd,
    none,
    nto,
    openbsd,
    psp,
    psx,
    redox,
    solaris,
    solid_asp3,
    switch,
    tvos,
    uefi,
    unknown,
    vita,
    vxworks,
    watchos,
    windows,
    xous,
}

#[derive(strum::AsRefStr, strum::EnumString)]
pub enum RustArch {
    aarch64,
    aarch64_be,
    arm,
    arm64_32,
    armeb,
    armebv7r,
    armv4t,
    armv5te,
    armv6,
    armv6k,
    armv7,
    armv7a,
    armv7k,
    armv7r,
    armv7s,
    asmjs,
    avr,
    bpfeb,
    bpfel,
    hexagon,
    i386,
    i586,
    i686,
    loongarch64,
    m68k,
    mips,
    mips64,
    mips64el,
    mipsel,
    mipsisa32r6,
    mipsisa32r6el,
    mipsisa64r6,
    mipsisa64r6el,
    msp430,
    nvptx64,
    powerpc,
    powerpc64,
    powerpc64le,
    riscv32gc,
    riscv32i,
    riscv32im,
    riscv32imac,
    riscv32imc,
    riscv64gc,
    riscv64imac,
    s390x,
    sparc,
    sparc64,
    sparcv9,
    thumbv4t,
    thumbv5te,
    thumbv6m,
    thumbv7a,
    thumbv7em,
    thumbv7m,
    thumbv7neon,
    thumbv8m_base,
    thumbv8m_main,
    wasm32,
    wasm64,
    x86_64,
    x86_64h,
}
